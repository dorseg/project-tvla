/*
Eli Simhayev - 2017
*/

// An acyclic singly-linked list with two or more elements where the colors alternate.
// That is, if the color of a node is v then the color of the next node is !v.
// The list is pointed by program x.
%n = {head, tail} 
%p = {
       sm = {tail:1/2}                      // tail is summary node, represents one or more nodes
       n = {head->tail:1/2, tail->tail:1/2} // edges representation. See the drawing
       x = {head}                           // x points to the first node - head
       t[n] = {head->head, head->tail, tail->tail:1/2}  // instrumentation predicate - reachability
       r[n,x] = {head, tail}    // who is reachable from x in list n 

       ///// alternating colors
       color = {head:1/2, tail:1/2}  // head has unknown color, and tail has both true/false nodes so 1/2
       alter[n] = {head, tail}       // ensure alternating color property
       last_node = {tail:1/2}        // last node located in the tail summary node
}

// A alternate colors singly-linked list with a single element pointed by x.
%n = {head}
%p = {
       x = {head}
       t[n] = {head->head}
       r[n,x] = {head}
       color = {head:1/2}
       alter[n] = {head}
       last_node = {head}
}
