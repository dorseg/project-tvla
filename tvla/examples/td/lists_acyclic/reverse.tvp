///////
// Sets

%s PVar {x, y, t}

#include "predicates_lists.tvp"

%%

#include "actions_lists.tvp"

%%

///////////////////////////////////////////////////////////////////////////////
// Transition system for a function that reverses a singly-linked list in-situ.

L1_1 Set_Null_L(y)      L1_2   // y = NULL;
L1_2 Is_Null_Var(x)     exit   // while (x != NULL) {
L1_2 Is_Not_Null_Var(x) L1_3
L1_3 Copy_Var_L(t, y)   L1_4   //   t = y;
L1_4 Copy_Var_L(y, x)   L1_5   //   y = x;
L1_5 Get_Next_L(x, x)   L1_6   //   x = x->n;
L1_6 Set_Next_Null_L(y) L1_7   //   y->n = NULL;
L1_7 Set_Next_L(y, t)   L1_2   //   y->n = t;
                               // }
exit Assert_ListInvariants(y) error
exit Assert_No_Leak(y)        error